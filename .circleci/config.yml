version: 2
jobs:

  install:
    docker:
      - image: cimg/node:16.0.0
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
      - run: yarn
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - persist_to_workspace:
          root: .
          paths:
            - node_modules

  test:
    docker:
      - image: cimg/node:16.15.1
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: yarn test:ci

  build:
    docker:
      - image: cimg/node:16.15.1
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: yarn build
      - persist_to_workspace:
          root: .
          paths:
            - .next

  release:
    docker:
      - image: cimg/node:16.15.1
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run: npx semantic-release

  deploy:
    machine: true
    steps:
      - attach_workspace:
          at: .
      - deploy:
          name: Deploy to GitHub Pages
          command: |
              set -e
              if [ ! -d ".next" ]
              then
                  echo ".next folder not found"
                  exit 1
              fi
              mkdir gh-pages-branch
              cd gh-pages-branch
              git config --global user.email "$GH_EMAIL" > /dev/null 2>&1
              git config --global user.name "$GH_NAME" > /dev/null 2>&1
              git init
              git remote add --fetch origin https://${GH_TOKEN}@github.com/vicentelyrio/vite-template.git
              if git rev-parse --verify origin/gh-pages > /dev/null 2>&1
              then
                  git checkout gh-pages
                  git rm -rf .
              else
                  git checkout --orphan gh-pages
              fi
              cp -a "../.next/." .
              git add -A
              git commit --allow-empty -m "Deploy to GitHub pages [ci skip]"
              git push --force --quiet origin gh-pages > /dev/null 2>&1
              cd ..
              rm -rf gh-pages-branch
              echo "Finished GitHub pages Deployment!"
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - install:
          filters:
            branches:
              ignore:
                - gh-pages
      - test:
          requires:
            - install
      - build:
          requires:
            - test
      - release:
          requires:
            - build
          filters:
            branches:
              only:
                - main
                - beta
                - alpha
                - next
                - next-major
      - deploy:
          requires:
            - release
          filters:
            branches:
              only:
                - main
